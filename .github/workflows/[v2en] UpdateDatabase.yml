name: Execute addsent.py

on:
  workflow_dispatch:
  pull_request:
    types: [closed]

jobs:
  execute_python_script:
    name: Update database
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, 'update-database') ||  github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout repo content
        uses: actions/checkout@v2 # checkout the repository content
        with:
          ref: update-database-run

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.6" # install the python version needed

      - name: Setup client secret
        run: sed -e "s|project_id_value|${{ secrets.PROJECT_ID_VALUE }}|g"
          -e "s|private_key_id_value|${{ secrets.PRIVATE_KEY_ID_VALUE }}|g"
          -e "s|private_key_value|${{ secrets.PRIVATE_KEY_VALUE }}|g"
          -e "s|client_email_value|${{ secrets.CLIENT_EMAIL_VALUE }}|g"
          -e "s|client_id_value|${{ secrets.CLIENT_ID_VALUE }}|g"
          -e "s|client_x509_cert_url_value|${{ secrets.CERT_URL_VALUE }}|g" client_secret_temp.json > client_secret.json

      - uses: actions/cache@v2
        id: cache-venv # name for referring later
        with:
          path: ./venv/ # what we cache: the virtualenv
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      # Build a virtualenv, but only if it doesn't already exist
      - run: pip install wheel && python setup.py bdist_wheel &&
          python -m venv ./.venv && . ./.venv/bin/activate &&
          pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Execute Python script # run main.py
        run: . ./.venv/bin/activate && python addsent.py --amount-exe 500 --ci_cd

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT }}
          commit-message: Update database
          base: update-database-run
          signoff: false
          branch: update-database
          delete-branch: true
          title: "Update database"
          draft: false
          body:
          labels: |
            update-database

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PAT }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}

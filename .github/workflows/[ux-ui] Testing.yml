name: Test UX/UI
run-name: ${{ github.actor }} is testing fullstack
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches-ignore:
      - update-database
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: typegraphql
          MYSQL_USER: admin
          MYSQL_PASSWORD: Vanh@Mysql2006
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "latest"

      # Speed up subsequent runs with caching
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Install required deps for action
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      # Finally, run our tests
      - name: Run the backend tests
        working-directory: ./backend
        run: npm test

      - name: Run the frontend tests
        working-directory: ./frontend
        run: npm run --prefix ../backend start &> /dev/null & npm run test:e2e:ci
